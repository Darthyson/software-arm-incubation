name           = "input_as_dimmer_two_off_darker"
description    = "IN8 - Dimmer Two Hand Off darker"
device_spec    = "Jung_2118_dim_config.device"
power_on_delay = device.ms ("bus_return_delay_base")
tags           = "APP", "IN8", "DIM","TWO_OFF_D"

### the actual test function starts here
Section          ("check bus return telegram")
App_Loop         ()
Send_Telegram    (device.com_object [ 0], 0, comment = "Bus return action for channel 1")
Send_Telegram    (device.com_object [ 1], 1, comment = "Bus return action for channel 2")

Section          ("Set input 3")
App_Loop         ("_input3Set")
App_Loop         (comment = "No direct action, only after debounce is complete")
Progress_Time    (10, comment = "After debounce set OFF for OBJ 2")
App_Loop         ()
Send_Telegram    (device.com_object [2], 0)

Section          ("Clear input 3")
Progress_Time    (device.channel [3].ms ("time_between_dim_switch_base") - 1)
App_Loop         ("_input3Clear")
Progress_Time    (10, comment = "No action after debounce because dimming has not been started")
App_Loop         ()
App_Loop         ()

for i in (1, 2) :
    Section          ("The next switch should send an OFF telegram again")
    App_Loop         ("_input3Set")
    Progress_Time    (10, comment = "After debounce set OFF for OBJ 2")
    App_Loop         ()
    Send_Telegram    (device.com_object [2], 0)
    Progress_Time    (device.channel [3].ms ("time_between_dim_switch_base"))
    App_Loop         ()
    Send_Telegram    (device.com_object [2 + 8], 0x00 + device.channel [3].darker_by)
    Progress_Time    (device.channel [3].ms ("repitition_time_base"))
    App_Loop         (comment = "No telegram repitition")
    App_Loop         ()

    Section          ("Clear input 3")
    App_Loop         ("_input3Clear")
    Progress_Time    (10, comment = "Generate the stop telegramm")
    App_Loop         ()
    Send_Telegram    (device.com_object [2 + 8], 0x00 + 0)


